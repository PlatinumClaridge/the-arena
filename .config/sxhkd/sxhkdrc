# bspwm hotkeys
#
# Cleanly quit bspwm
super + shift + q
	bspc quit 1 && killall limepanel

# Show keybindings
super + F1
	sterminal -e keybindings.sh

# run applications

#super + space
#	dmenu_recent -fn 'xos4 Terminus:size=15' -i -l 14 -w 600 -y $PANEL_HEIGHT

super + space
	rofi -show

#super + p
#	dmenu_recent -h $PANEL_HEIGHT -fn 'xos4 Terminus:size=15' -i

super + Return
	sterminal

super + shift + z
	open-terminal-here

#super + d
#	rofi-finder.sh

super + w
	$BROWSER

super + r
	sterminal ranger

super + n
	sterminal newsboat

super + i
	sterminal htop

super + y
	sterminal calcurse

super + m
	sterminal ncmpcpp

super + v
	sterminal nvim -c "VimwikiIndex"

#super + e

#
# Window manipulation
# ______________

# Close window
super + q
	bspc  node -c

# Kill window
super + shift + x
	bspc  node -k

# Toggle tiling mode of window
super + shift + t
	bspc node -t {pseudo_tiled,tiled}
super + t
	{bspc node -t floating && window-placer $(bspc query -T -d | grep -o '"state":"floating"' | wc -l),bspc node -t tiled}
# Force all windows of the desktop to tile
super + ctrl + t
	bspcp tile
# Force all windows of the desktop to float and arrange them
super + ctrl + shift + t
	bspcp float

# Toggle fullscreen
super + f
	bspc node -t {fullscreen,tiled}

# Try to keep size and position of the selected window
super + o
	bspc node -g private

# Make window sticky
super + s
	bspc node -g sticky

### Map or unmap windows (functional equivalent of "minimize")
super + c
    whid dmenu

#super + shift + c
#    whid hide

super + ctrl + c
    whid last

#
# Window moving and splitting
# ______________

# Autopresel (split window in its largest dimension)
ctrl + space
	auto-presel

#alt + ctrl + {h,j,k,l}
#	bspc node -p \~{west,south,north,east}

# alt + shift + {h,j,k,l}
	# bspc node @/ -p \~{west,south,north,east}

# Set splitting ratio of windows
alt + ctrl + {1-9}
	bspc node -o 0.{1-9}

# Create a new "master area", splitting the whole desktop instead of just windows.
alt + Return
	bspc node -n @/

# go (Shift=move) to desktop (and focus the monitor that the desktop is located on. Bspwm style)
super + {_,shift + }{1-9,0}
    bspc {desktop -f,node -d} ^{1-9,10}

# cycle windows
alt + {_,shift + }Tab
    bspc node -f {next,prev}

super +  {h,j,k,l}
    focusmover {west,south,north,east}

# Move tiled windows. Moving a tiled window to
# preselected one moves into preselection instead.
# Moving out of the screen should move the window to next monitor if possible

super + shift + {h,j,k,l}
	windowgrabber {west,south,north,east}

super + ctrl + {h,j,k,l}
	bspwm_resize.sh {west,south,north,east}

#
# Layout manipulation/desktop level controls
# ______________

# Toggle monocle mode
super + shift + f
	bspc desktop -l next

# Balance tree
super + b
	bspc node @/ -B

# Balance brother node. If you do this on biggest window of the desktop, it usually means balancing all windows with except the biggest.
super + alt + b
	bspc node @brother -B

# Undo balancing (equalize windows)
super + ctrl + b
	bspc node @/ -E

# Toggle automatic balancing of windows
alt + b
	euclid_balancer

# Mirror and flip leaves of tree
super + {comma,period}
	bspc node @/ -F {horizontal,vertical}

# Rotate leaves of tree
super + shift + {comma,period}
	bspc node @/ -R {90,270}

# Change window gap

super + g
	bspc config -d focused window_gap {$gap,$(($gap+$gap)),$(($gap+$gap+$gap))}

super + button{4,5}
	bspc config -d focused window_gap $((`bspc config -d focused window_gap` {+,-} 2 ))
#
# mouse bindings
# __________________

~button1
	DidIClickDesktop.sh && gapgrab

~button2
	DidIClickDesktop.sh && BspwmDesktopMenu
#	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmDesktopMenui
#	DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/BspwmWindowMenui

~button3
	DidIClickDesktop.sh && rofimenu -desktop
#DidIClickDesktop.sh && mygtkmenui -- .config/GTKmenu/LaunchMenu

# Switch workspace by scrolling on the desktop. Causes scrolling issues on some systems.
#~button4
#	DidIClickDesktop.sh && bspc desktop -f next
#~button5
#	DidIClickDesktop.sh && bspc desktop -f prev

### Add or remove desktops by scrolling
super + ctrl + button5
    bspcp dsktp rm

super + ctrl + button4
    bspcp dsktp add

# Spawn applications popup menu and manually tile selected
# app where your mouse was when you opened the menu. Smartsplit only chooses
# biggest dimension of the window, MouseLaunch only cares which edge is closer.
# mod5 is alt_gr (first key right from space) on most keyboards.
mod5 + @button1
	smartsplit ; rofimenu -desktop
#	smartsplit ; dboxmenu
#    MouseLaunch ; mygtkmenui -- .config/GTKmenu/LaunchMenu

# Spawn window manipulation menu
# Mod1 is alt
mod1 + @button1
	BspwmWindowMenu
# mygtkmenui -- .config/GTKmenu/BspwmWindowMenui

Print
	scrot; notify-send "Fullscreen saved"

super + Print
	scrot -u; notify-send "Window saved"

super + shift + Print
	scrot -s

#
# Media keys
#

XF86AudioRaiseVolume
	volume up

XF86AudioLowerVolume
	volume down

XF86AudioMute
	volume mute

XF86Audio{Next,Prev}
	mpc {next,prev}

XF86Audio{Pause,Play,Stop}
	mpc {toggle,toggle,stop}

XF86MonBrightnessDown
 light -U 5

XF86MonBrightnessUp
 light -A 5

XF86Sleep
	systemctl suspend

# Reload dunst
super + shift + d
	killall dunst; notify-send "Restarting dunst"

# In case bspwmrc fails to execute/you wish have plugged in a new monitor
super + shift + r
	sterminal nvim ~/.config/bspwm/bspwmrc
#edit this file
alt + ctrl + space
	sterminal nvim ~/.config/sxhkd/sxhkdrc

# Remove receptacles
super + BackSpace
  for i in $(bspc query -N -n .leaf.!window.local); do bspc node $i -k; done
